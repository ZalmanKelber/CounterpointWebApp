[{"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/index.js":"1","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/App.js":"2","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/Landing.js":"3","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/Enter.js":"4","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/Create.js":"5","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/Navbar.js":"6","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectMode.js":"7","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectType.js":"8","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectCantusFirmusIndex.js":"9","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/DisplayResult.js":"10","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectRanges.js":"11","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectLength.js":"12","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectStepHeader.js":"13"},{"size":210,"mtime":1609217941371,"results":"14","hashOfConfig":"15"},{"size":463,"mtime":1609355589047,"results":"16","hashOfConfig":"15"},{"size":3642,"mtime":1609398140283,"results":"17","hashOfConfig":"15"},{"size":441,"mtime":1609307012999,"results":"18","hashOfConfig":"15"},{"size":4277,"mtime":1609383790287,"results":"19","hashOfConfig":"15"},{"size":979,"mtime":1609360916867,"results":"20","hashOfConfig":"15"},{"size":2952,"mtime":1609387178287,"results":"21","hashOfConfig":"15"},{"size":3590,"mtime":1609387358167,"results":"22","hashOfConfig":"15"},{"size":1161,"mtime":1609387184020,"results":"23","hashOfConfig":"15"},{"size":3488,"mtime":1609544918386,"results":"24","hashOfConfig":"15"},{"size":2563,"mtime":1609387263144,"results":"25","hashOfConfig":"15"},{"size":1666,"mtime":1609400243081,"results":"26","hashOfConfig":"15"},{"size":556,"mtime":1609387758613,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"2jh34x",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/index.js",[],["58","59"],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/App.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/Landing.js",["60"],"\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../css/Landing.css\";\nimport openingAudio from \"../frontendAudio/page_opening.wav\";\n\nconst START_TIME = 1000\nconst FIRST_FADE = 2000\nconst SECOND_FADE = 1500\nconst THIRD_FADE = 1500\nconst INTERVAL_TIME = 10\n\n\nclass Landing extends React.Component {\n\n    state = { \n        audio: null,\n        opacityLevels: {\n            landing: 1,\n            title: 0,\n            menu: 0\n        } \n    }\n\n    componentDidMount = () => {\n        this.startPage()\n        setTimeout(() => {\n           this.firstFade() \n           setTimeout(() => {\n               this.secondFade()\n               setTimeout(() => {\n                   this.thirdFade()\n               }, SECOND_FADE);\n           }, FIRST_FADE);\n        }, START_TIME);\n    }\n\n    componentWillUnmount = () => {\n        this.state.audio.pause()\n    }\n\n    startPage = () => {\n        document.getElementById(\"landing\").className = \"landing landing-before-transition\";\n        const audio = new Audio(openingAudio);\n        audio.play();\n        this.setState({ ...this.state, audio: audio })\n    }\n\n    firstFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = 1 - (count * .3 * INTERVAL_TIME / FIRST_FADE);\n            this.setState({ ...this.state, opacityLevels: {\n                landing: newOpacity, title: 0, menu: 0\n            } })\n            if (count >= FIRST_FADE / INTERVAL_TIME) {\n                clearInterval(handler);\n                this.setState({ ...this.state, opacityLevels: {\n                    landing: 1, title: 0, menu: 0\n                } })\n                document.getElementById(\"landing\").className = \"landing landing-after-transition\";\n            }\n        }, INTERVAL_TIME);\n    }\n\n    secondFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = count * INTERVAL_TIME / SECOND_FADE;\n            this.setState({ ...this.state, opacityLevels: {\n                landing: 1, title: newOpacity, menu: 0\n            } })\n            if (count >= SECOND_FADE / INTERVAL_TIME) {\n                clearInterval(handler);\n            }\n        }, INTERVAL_TIME);\n    }\n\n    thirdFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = count * INTERVAL_TIME / THIRD_FADE;\n            this.setState({ ...this.state, opacityLevels: {\n                landing: 1, title: 1, menu: newOpacity\n            } })\n            if (count >= THIRD_FADE / INTERVAL_TIME) {\n            }\n        }, INTERVAL_TIME);\n    }\n\n\n    render() {\n\n        return (\n            <>\n            <div id=\"landing\" style={{opacity: this.state.opacityLevels.landing}}>\n                <h1 className=\"landing-title\" style={{opacity: this.state.opacityLevels.title}}>\n                    C O U N T E R P O I N T &emsp; &emsp; G E N E R A T O R\n                </h1>\n                <div id=\"menu\" className=\"landing-menu\" style={{opacity: this.state.opacityLevels.menu}}>\n                    <Link to=\"/create\">\n                        <h3 className=\"menu-option\">GENERATE EXAMPLES</h3>\n                    </Link>\n                    <Link to=\"/gallery\">\n                        <h3 className=\"menu-option\">GALLERY</h3>\n                    </Link>\n                    <Link to=\"/about\">\n                        <h3 className=\"menu-option\">ABOUT</h3>\n                    </Link>\n                </div>\n            </div>\n            </>\n        );\n    }\n\n}\n\nexport default Landing ","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/Enter.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/Create.js",["61"],"import React from \"react\";\n\nimport Navbar from \"./Navbar\";\nimport SelectType from \"./SelectType\";\nimport SelectMode from \"./SelectMode\";\nimport SelectRanges from \"./SelectRanges\";\nimport SelectCantusFirmusIndex from \"./SelectCantusFirmusIndex\";\nimport SelectLength from \"./SelectLength\";\nimport DisplayResult from \"./DisplayResult\";\n\nimport \"../css/Create.css\"\n\nconst phases = {\n    SELECT_TYPE: \"SELECT_TYPE\",\n    SELECT_MODE: \"SELECT_MODE\",\n    SELECT_RANGES: \"SELECT_RANGES\",\n    SELECT_CANTUS_FRMUS_INDEX: \"SELECT_CANTUS_FIRMUS_INDEX\",\n    SELECT_LENGTH: \"SELECT_LENGTH\",\n    DISPLAY_RESULT: \"DISPLAY_RESULT\"\n}\n\n\nclass Create extends React.Component {\n\n    state = {\n        currentPhase: phases.SELECT_TYPE,\n        selectedValues: {\n            type: null, mode: null, lines: null, length: null, cantusFirmusIndex: 0\n        }\n    }\n\n    getUpdateFunction = parameterToChange => {\n        const updateFunction = newValue => {\n            this.setState({\n                ...this.state,\n                selectedValues: {\n                    ...this.state.selectedValues,\n                    [parameterToChange]: newValue\n                }\n            });\n        }\n        return updateFunction;\n    }\n\n    getChangePhaseFunction = newPhase => {\n        const getChangePhaseFunction = () => {\n            this.setState({\n                ...this.state,\n                currentPhase: newPhase\n            });\n        }\n        return getChangePhaseFunction;\n    }\n\n    render() {\n        let DisplayComponent;\n        let goForward;\n        let goBackward;\n        let updateValue;\n        switch (this.state.currentPhase) {\n            case phases.SELECT_TYPE:\n                DisplayComponent = SelectType;\n                goForward = this.getChangePhaseFunction(phases.SELECT_MODE);\n                updateValue = this.getUpdateFunction(\"type\");\n                break;\n            case phases.SELECT_MODE:\n                DisplayComponent = SelectMode;\n                goForward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                goBackward = this.getChangePhaseFunction(phases.SELECT_TYPE);\n                updateValue = this.getUpdateFunction(\"mode\");\n                break;\n            case phases.SELECT_RANGES:\n                DisplayComponent = SelectRanges;\n                if (this.state.selectedValues.type.substring(this.state.selectedValues.type.length - 7) === \"Species\") {\n                    goForward = this.getChangePhaseFunction(phases.SELECT_CANTUS_FRMUS_INDEX);\n                } else {\n                    goForward = this.getChangePhaseFunction(phases.SELECT_LENGTH);\n                }\n                goBackward = this.getChangePhaseFunction(phases.SELECT_MODE);\n                updateValue = this.getUpdateFunction(\"lines\");\n                break;\n            case phases.SELECT_CANTUS_FRMUS_INDEX:\n                DisplayComponent = SelectCantusFirmusIndex;\n                goForward = this.getChangePhaseFunction(phases.SELECT_LENGTH);\n                goBackward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                updateValue = this.getUpdateFunction(\"cantusFirmusIndex\");\n                break;\n            case phases.SELECT_LENGTH:\n                DisplayComponent = SelectLength;\n                goForward = this.getChangePhaseFunction(phases.DISPLAY_RESULT);\n                if (this.state.selectedValues.type.substring(this.state.selectedValues.type.length - 7) === \"Species\") {\n                    goBackward = this.getChangePhaseFunction(phases.SELECT_CANTUS_FRMUS_INDEX);\n                } else {\n                    goBackward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                }\n                updateValue = this.getUpdateFunction(\"length\");\n                break;\n            case phases.DISPLAY_RESULT:\n                DisplayComponent = DisplayResult;\n                break;\n        } \n\n        return (\n            <div className=\"main\">\n                <Navbar />\n                <DisplayComponent\n                    goForward={goForward}\n                    goBackward={goBackward}\n                    updateValue={updateValue}\n                    currentSelections={this.state.selectedValues}\n                />\n            </div>\n        );\n    }\n\n}\n\nexport default Create ","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/Navbar.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectMode.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectType.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectCantusFirmusIndex.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/DisplayResult.js",["62","63","64","65"],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectRanges.js",["66"],"import React from \"react\";\n\nimport SelectStepHeader from \"./SelectStepHeader\";\n\nimport \"../css/SelectRanges.css\";\n\nclass SelectRanges extends React.Component {\n\n    state = {\n        selected: []\n    }\n\n    handleSubmit = async () => {\n        await this.props.updateValue(this.state.selected);\n        this.props.goForward();\n    }\n\n    getNumberOfLines = () => {\n        return [\"cantusFirmus\", \"freeMelody\"].includes(this.props.currentSelections.type) ? 1 : 2;\n    }\n\n    handleClick = vocalRange => {\n        let rangeList = [vocalRange]\n        if (this.getNumberOfLines() === 2) {\n            switch (vocalRange) {\n                case \"soprano\":\n                    rangeList = [\"alto\", \"soprano\"];\n                    break;\n                case \"alto\":\n                    rangeList.push(\"soprano\");\n                    break;\n                case \"tenor\":\n                    rangeList.push(\"alto\");\n                    break;\n                case \"bass\":\n                    rangeList.push(\"tenor\");\n            }\n        } \n        this.setState({ ...this.state, selected: rangeList });\n    }\n\n    render() {\n        const vocalRanges = [\"soprano\", \"alto\", \"tenor\", \"bass\"];\n        const instructionString = this.getNumberOfLines() === 2 ? \"TWO VOCAL RANGES\" : \"A VOCAL RANGE\";\n        const stepTitle = `STEP 3: CHOOSE ${instructionString}`\n        return (\n            <>\n            <SelectStepHeader \n                stepTitle={stepTitle}\n                showGoBackButton={true}\n                goBackFunction={this.props.goBackward}\n            />\n            <div className=\"step-content\">\n                <div className=\"choose-range-content\">\n                    <div className=\"ranges-container\">\n                        {\n                            vocalRanges.map((vocalRange, i) => {\n                                const classList = this.state.selected.includes(vocalRange) ? \"range selected-range\" : \"range\";\n                                return (\n                                <div key={i} className={classList} onClick={() => this.handleClick(vocalRange)}>{vocalRange.toUpperCase()}</div>\n                                );\n                            })\n                        }\n                    </div>\n                    <div className=\"continue-button\" onClick={this.handleSubmit} style={{ display: this.state.selected.length === 0 ? \"none\" : \"block\" }}>\n                        Continue\n                    </div>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default SelectRanges;","/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectLength.js",["67"],"/Users/alexkelber/Documents/Python/Jeppesen/FlaskApp/client/src/components/SelectStepHeader.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":84,"column":15,"nodeType":"74","messageId":"75","endLine":84,"endColumn":22},{"ruleId":"76","severity":1,"message":"77","line":60,"column":9,"nodeType":"78","messageId":"79","endLine":101,"endColumn":10},{"ruleId":"80","severity":1,"message":"81","line":46,"column":17,"nodeType":"82","messageId":"83","endLine":46,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":49,"column":17,"nodeType":"82","messageId":"83","endLine":49,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":52,"column":17,"nodeType":"82","messageId":"83","endLine":52,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":55,"column":17,"nodeType":"82","messageId":"83","endLine":55,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":25,"column":13,"nodeType":"78","messageId":"79","endLine":37,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":15,"column":61,"nodeType":"86","messageId":"87","endLine":15,"endColumn":62,"fix":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'handler' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"91","text":"92"},"no-global-assign","no-unsafe-negation",[361,375],"\n            ."]